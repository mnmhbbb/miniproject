{"version":3,"sources":["webpack://_N_E/./node_modules/next/router.js","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?9d0d","webpack://_N_E/./pages/signup.js"],"names":["module","exports","window","__NEXT_P","push","SignUpStyle","styled","div","Form","Item","SignupPage","signUpDone","useSelector","store","user","useInput","nickname","onChangeNickname","email","onChangeEmail","password","onChangePassword","passwordConfirm","onChangePasswordConfirm","router","useRouter","dispatch","useDispatch","useEffect","alert","onFinish","useCallback","type","SIGN_UP_REQUEST","charSet","href","name","scrollToFirstError","label","tooltip","rules","required","message","whitespace","value","onChange","hasFeedback","Password","dependencies","getFieldValue","validator","_","Promise","reject","Error","resolve","valuePropName","style","float","htmlType"],"mappings":"8FAAAA,EAAOC,QAAU,EAAQ,S,sBCCpBC,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,UACA,WACE,OAAO,EAAQ,Y,mPCOjBC,EAAcC,IAAOC,IAAV,yEAAGD,CAAH,wHAUAA,YAAOE,IAAKC,MAAf,sEAAGH,CAAH,2GAiJCI,UAvII,WAAM,IACfC,EAAeC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAA5CH,WADe,EAEcI,YAAS,IAFvB,mBAEhBC,EAFgB,KAENC,EAFM,OAGQF,YAAS,IAHjB,mBAGhBG,EAHgB,KAGTC,EAHS,OAIcJ,YAAS,IAJvB,mBAIhBK,EAJgB,KAINC,EAJM,OAK4BN,YAAS,IALrC,mBAKhBO,EALgB,KAKCC,EALD,KAMjBC,EAASC,sBACTC,EAAWC,cAEjBC,qBAAU,WACJjB,IACFkB,MAAM,8EACNL,EAAOpB,KAAK,cAIhB,IAAM0B,EAAWC,uBAAY,WAC3BL,EAAS,CAAEM,KAAMC,QAChB,IAEH,OACE,qCACE,eAAC,IAAD,WACE,sBAAMC,QAAQ,UACd,4EAEF,eAAC7B,EAAD,WACE,cAAC,IAAD,CAAM8B,KAAK,IAAX,SACE,4BACE,6BACE,cAAC,IAAD,UAIN,0DACA,eAAC,IAAD,CAAMC,KAAK,WAAWC,oBAAkB,EAACP,SAAUA,EAAnD,UACE,cAAC,IAAKrB,KAAN,CACE2B,KAAK,WACLE,MAAM,qBACNC,QAAQ,uCACRC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,2DACTC,YAAY,IARlB,SAYE,cAAC,IAAD,CAAOC,MAAO5B,EAAU6B,SAAU5B,MAGpC,cAAC,IAAKR,KAAN,CACE2B,KAAK,QACLE,MAAM,qBACNE,MAAO,CACL,CACER,KAAM,QACNU,QAAS,+EAEX,CACED,UAAU,EACVC,QAAS,6DAVf,SAcE,cAAC,IAAD,CAAOE,MAAO1B,EAAO2B,SAAU1B,MAGjC,cAAC,IAAKV,KAAN,CACE2B,KAAK,WACLE,MAAM,2BACNE,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,mEAGbI,aAAW,EATb,SAWE,cAAC,IAAMC,SAAP,CAAgBH,MAAOxB,EAAUyB,SAAUxB,MAG7C,cAAC,IAAKZ,KAAN,CACE2B,KAAK,UACLE,MAAM,wCACNU,aAAc,CAAC,YACfF,aAAW,EACXN,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,kEAEX,gBAAGO,EAAH,EAAGA,cAAH,MAAwB,CACtBC,UADsB,SACZC,EAAGP,GACX,OAAKA,GAASK,EAAc,cAAgBL,EAGrCQ,QAAQC,OACb,IAAIC,MAAM,sFAHHF,QAAQG,cAbzB,SAsBE,cAAC,IAAMR,SAAP,CACEH,MAAOtB,EACPuB,SAAUtB,MAId,cAAC,IAAKd,KAAN,CACE2B,KAAK,YACLoB,cAAc,UACdhB,MAAO,CACL,CACEU,UAAW,SAACC,EAAGP,GAAJ,OACTA,EACIQ,QAAQG,UACRH,QAAQC,OAAO,IAAIC,MAAM,0DARrC,SAYE,cAAC,IAAD,+EAEF,cAAC,IAAK7C,KAAN,CAAWgD,MAAO,CAAEC,MAAO,SAA3B,SACE,cAAC,IAAD,CAAQ1B,KAAK,UAAU2B,SAAS,SAAhC,wC","file":"static/chunks/pages/signup-38d54bd3d854be6ad8f0.js","sourcesContent":["module.exports = require('./dist/client/router')\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/signup\",\n      function () {\n        return require(\"private-next-pages/signup.js\");\n      }\n    ]);\n  ","import React, { useCallback, useEffect } from 'react';\r\nimport Head from 'next/head';\r\nimport Link from 'next/link';\r\nimport { AiOutlineHome } from 'react-icons/ai';\r\nimport { Form, Input, Checkbox, Button } from 'antd';\r\nimport { useRouter } from 'next/router';\r\nimport useInput from '../hooks/useInput';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SIGN_UP_REQUEST } from '../reducers/user';\r\nimport styled from 'styled-components';\r\n\r\nconst SignUpStyle = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  padding: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst FormItem = styled(Form.Item)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  & Input {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst SignupPage = () => {\r\n  const { signUpDone } = useSelector((store) => store.user);\r\n  const [nickname, onChangeNickname] = useInput('');\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const [passwordConfirm, onChangePasswordConfirm] = useInput('');\r\n  const router = useRouter();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (signUpDone) {\r\n      alert('회원가입이 완료되었습니다!');\r\n      router.push('/login');\r\n    }\r\n  });\r\n\r\n  const onFinish = useCallback(() => {\r\n    dispatch({ type: SIGN_UP_REQUEST });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>회원가입 | MINI LAND</title>\r\n      </Head>\r\n      <SignUpStyle>\r\n        <Link href=\"/\">\r\n          <a>\r\n            <h1>\r\n              <AiOutlineHome />\r\n            </h1>\r\n          </a>\r\n        </Link>\r\n        <h1>회원가입</h1>\r\n        <Form name=\"register\" scrollToFirstError onFinish={onFinish}>\r\n          <Form.Item\r\n            name=\"nickname\"\r\n            label=\"닉네임\"\r\n            tooltip=\"What do you want others to call you?\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '닉네임을 입력하세요!',\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input value={nickname} onChange={onChangeNickname} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"이메일\"\r\n            rules={[\r\n              {\r\n                type: 'email',\r\n                message: '올바른 이메일을 입력하세요!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: '이메일을 입력하세요!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input value={email} onChange={onChangeEmail} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"password\"\r\n            label=\"비밀번호\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '비밀번호를 입력하세요!',\r\n              },\r\n            ]}\r\n            hasFeedback\r\n          >\r\n            <Input.Password value={password} onChange={onChangePassword} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"confirm\"\r\n            label=\"비밀번호 확인\"\r\n            dependencies={['password']}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '비밀번호를 입력하세요!',\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(\r\n                    new Error('비밀번호가 일치하지 않습니다.')\r\n                  );\r\n                },\r\n              }),\r\n            ]}\r\n          >\r\n            <Input.Password\r\n              value={passwordConfirm}\r\n              onChange={onChangePasswordConfirm}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"agreement\"\r\n            valuePropName=\"checked\"\r\n            rules={[\r\n              {\r\n                validator: (_, value) =>\r\n                  value\r\n                    ? Promise.resolve()\r\n                    : Promise.reject(new Error('동의하셔야 합니다.')),\r\n              },\r\n            ]}\r\n          >\r\n            <Checkbox>회원가입에 동의합니다.</Checkbox>\r\n          </Form.Item>\r\n          <Form.Item style={{ float: 'right' }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              가입\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </SignUpStyle>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupPage;\r\n"],"sourceRoot":""}